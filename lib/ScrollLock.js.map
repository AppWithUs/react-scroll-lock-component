{"version":3,"sources":["../src/ScrollLock.jsx"],"names":["ScrollLock","onScrollHandler","e","elem","scrollingElement","scrollTop","scrollHeight","clientHeight","wheelDelta","deltaY","isDeltaPositive","cancelScrollEvent","stopImmediatePropagation","preventDefault","returnValue","addEventListener","removeEventListener","r","firstChild","props","children"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,U;;;;;;;;;;;;;;8LASJC,e,GAAkB,UAACC,CAAD,EAAO;AACvB,UAAMC,OAAO,MAAKC,gBAAlB;AADuB,UAEfC,SAFe,GAE2BF,IAF3B,CAEfE,SAFe;AAAA,UAEJC,YAFI,GAE2BH,IAF3B,CAEJG,YAFI;AAAA,UAEUC,YAFV,GAE2BJ,IAF3B,CAEUI,YAFV;;AAGvB,UAAMC,aAAaN,EAAEO,MAArB;AACA,UAAMC,kBAAkBF,aAAa,CAArC;;AAEA,UAAIE,mBAAmBF,aAAaF,eAAeC,YAAf,GAA8BF,SAAlE,EAA6E;AAC3EF,aAAKE,SAAL,GAAiBC,YAAjB;AACA,eAAO,MAAKK,iBAAL,CAAuBT,CAAvB,CAAP;AACD,OAHD,MAIK,IAAI,CAACQ,eAAD,IAAoB,CAACF,UAAD,GAAcH,SAAtC,EAAiD;AACpDF,aAAKE,SAAL,GAAiB,CAAjB;AACA,eAAO,MAAKM,iBAAL,CAAuBT,CAAvB,CAAP;AACD;AACF,K,QAEDS,iB,GAAoB,UAACT,CAAD,EAAO;AACzBA,QAAEU,wBAAF;AACAV,QAAEW,cAAF;AACAX,QAAEY,WAAF,GAAgB,KAAhB;AACA,aAAO,KAAP;AACD,K;;;;;wCA7BmB;AAClB,WAAKV,gBAAL,CAAsBW,gBAAtB,CAAuC,OAAvC,EAAgD,KAAKd,eAArD,EAAsE,KAAtE;AACD;;;2CAEsB;AACrB,WAAKG,gBAAL,CAAsBY,mBAAtB,CAA0C,OAA1C,EAAmD,KAAKf,eAAxD,EAAyE,KAAzE;AACD;;;6BAyBQ;AAAA;;AACP,aACE;AAAA;AAAA,UAAK,KAAK;AAAA,mBAAK,OAAKG,gBAAL,GAAwBa,EAAEC,UAA/B;AAAA,WAAV;AACG,aAAKC,KAAL,CAAWC;AADd,OADF;AAKD;;;;;;kBAGYpB,U","file":"ScrollLock.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ScrollLock extends Component {\n  componentDidMount() {\n    this.scrollingElement.addEventListener('wheel', this.onScrollHandler, false);\n  }\n\n  componentWillUnmount() {\n    this.scrollingElement.removeEventListener('wheel', this.onScrollHandler, false);\n  }\n\n  onScrollHandler = (e) => {\n    const elem = this.scrollingElement;\n    const { scrollTop, scrollHeight, clientHeight } = elem;\n    const wheelDelta = e.deltaY;\n    const isDeltaPositive = wheelDelta > 0;\n\n    if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {\n      elem.scrollTop = scrollHeight;\n      return this.cancelScrollEvent(e);\n    }\n    else if (!isDeltaPositive && -wheelDelta > scrollTop) {\n      elem.scrollTop = 0;\n      return this.cancelScrollEvent(e);\n    }\n  };\n\n  cancelScrollEvent = (e) => {\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    e.returnValue = false;\n    return false;\n  };\n\n  render() {\n    return (\n      <div ref={r => this.scrollingElement = r.firstChild}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default ScrollLock;\n"]}