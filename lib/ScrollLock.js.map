{"version":3,"sources":["../src/ScrollLock.jsx"],"names":["ScrollLock","props","forEach","func","bind","enabled","listenToScrollEvents","scrollingElement","stopListeningToScrollEvents","nextProps","fn","r","firstChild","e","delta","isDeltaPositive","elem","scrollTop","scrollHeight","clientHeight","shouldCancelScroll","cancelScrollEvent","handleEventDelta","deltaY","touchStart","changedTouches","clientY","stopImmediatePropagation","preventDefault","el","addEventListener","onWheelHandler","onTouchStartHandler","onTouchMoveHandler","removeEventListener","className","setScrollingElement","children","propTypes","bool","string","defaultProps"],"mappings":"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","file":"ScrollLock.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\n\nclass ScrollLock extends Component {\n    static propTypes = {\n        enabled: PropTypes.bool,\n        className: PropTypes.string\n    }\n\n    static defaultProps = {\n        enabled: true,\n        className: ''\n    }\n\n    constructor(props) {\n        super(props);\n        [\n            'listenToScrollEvents',\n            'stopListeningToScrollEvents',\n            'handleEventDelta',\n            'onWheelHandler',\n            'onTouchStartHandler',\n            'onTouchMoveHandler',\n            'setScrollingElement',\n            'cancelScrollEvent'\n        ].forEach((func) => { this[func] = this[func].bind(this); });\n    }\n\n    componentDidMount() {\n        if (this.props.enabled) {\n            this.listenToScrollEvents(this.scrollingElement);\n        }\n    }\n    componentWillUnmount() {\n        this.stopListeningToScrollEvents(this.scrollingElement);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.enabled !== nextProps.enabled) {\n            const fn = nextProps.enabled ?\n                this.listenToScrollEvents :\n                this.stopListeningToScrollEvents;\n\n            fn(this.scrollingElement);\n        }\n    }\n\n    setScrollingElement(r) {\n        this.scrollingElement = r && r.firstChild;\n    }\n\n    handleEventDelta(e, delta) {\n        const isDeltaPositive = delta > 0;\n        const elem = this.scrollingElement;\n        const { scrollTop, scrollHeight, clientHeight } = elem;\n\n        let shouldCancelScroll = false;\n        if (isDeltaPositive && delta > scrollHeight - clientHeight - scrollTop) {\n            // bottom limit\n            elem.scrollTop = scrollHeight;\n            shouldCancelScroll = true;\n        } else if (!isDeltaPositive && -delta > scrollTop) {\n            // top limit\n            elem.scrollTop = 0;\n            shouldCancelScroll = true;\n        }\n\n        if (shouldCancelScroll) {\n            this.cancelScrollEvent(e);\n        }\n    }\n\n    onWheelHandler(e) {\n        this.handleEventDelta(e, e.deltaY);\n    }\n\n    onTouchStartHandler(e) {\n        // set touch start so we can calculate touchmove delta\n        this.touchStart = e.changedTouches[0].clientY;\n    }\n\n    onTouchMoveHandler(e) {\n        const delta = this.touchStart - e.changedTouches[0].clientY;\n        this.handleEventDelta(e, delta);\n    }\n\n    cancelScrollEvent(e) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        return false;\n    }\n\n    listenToScrollEvents(el) {\n        el.addEventListener('wheel', this.onWheelHandler, false);\n        el.addEventListener('touchstart', this.onTouchStartHandler, false);\n        el.addEventListener('touchmove', this.onTouchMoveHandler, false);\n    }\n\n    stopListeningToScrollEvents(el) {\n        el.removeEventListener('wheel', this.onWheelHandler, false);\n        el.removeEventListener('touchstart', this.onTouchStartHandler, false);\n        el.removeEventListener('touchmove', this.onTouchMoveHandler, false);\n    }\n\n    render() {\n        return (\n            <div className={this.props.className} ref={this.setScrollingElement}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default ScrollLock;\n"]}